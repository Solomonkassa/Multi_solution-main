# Generated by Django 5.0.3 on 2024-04-15 10:57

import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tg_id', models.BigIntegerField(null=True)),
                ('chat_id', models.BigIntegerField(null=True)),
                ('username', models.CharField(blank=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(help_text='Required. 12-digit character should start with 251 followed by either 9 or 7 then 7 digits', max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid phone number: should start with 251 and be followed by either 9 or 7 then 8 digits', regex='^251(7|9)\\d{8}')])),
                ('email', models.EmailField(blank=True, help_text='Optional. Email of a user e.g., example@gmail.com', max_length=255, null=True)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('account_num', models.CharField(blank=True, max_length=20, null=True, verbose_name='Account Number')),
                ('trans_num', models.CharField(max_length=20, null=True, unique=True, verbose_name='Transaction Number')),
                ('is_reg_complete', models.BooleanField(default=False)),
                ('is_trainee', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('key', models.CharField(db_index=True, editable=False, max_length=255, unique=True)),
                ('suspended', models.BooleanField(default=False)),
            ],
        ),
    ]
